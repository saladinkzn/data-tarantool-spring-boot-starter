import java.util.regex.Matcher

plugins {
  id 'java'
  id 'ru.shadam.publish-plugin' version '0.3.0' apply false
  id "com.jfrog.bintray" version "1.7.3" apply false
  id "com.jfrog.artifactory" version "4.4.12" apply(false)
  id 'net.researchgate.release' version '2.6.0'
}

apply plugin: 'ru.shadam.publish-plugin'
apply plugin: (String) 'com.jfrog.bintray'
apply plugin: (String) 'com.jfrog.artifactory'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
  jcenter()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter:1.4.3.RELEASE'
  compile "ru.shadam:spring-data-tarantool:${version}"
  testCompile group: 'junit', name: 'junit', version: '4.11'
  testCompile 'org.springframework.boot:spring-boot-starter-test:1.4.3.RELEASE'
  testCompile 'com.palantir.docker.compose:docker-compose-rule:0.28.1'
}

publish {
  description = 'spring-boot-starter for spring-data-tarantool'
  github project.github_username, project.name
  developerName = 'Timur Shakurov'
  license = project.license
  licenseUrl = "https://raw.githubusercontent.com/${project.github_username}/${project.name}/master/LICENSE"
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  pkg {
    repo = 'maven'
    name = project.name
    licenses = [project.license]
    vcsUrl = "https://github.com/${project.github_username}/${project.name}.git"
    publications = ['mavenJava']
    version {
      gpg {
        sign = true
      }
    }
  }
}

artifactory {
  contextUrl = 'https://oss.jfrog.org/artifactory'
  publish {
    repository {
      repoKey = 'oss-snapshot-local'
      username = System.getenv('BINTRAY_USER')
      password = System.getenv('BINTRAY_KEY')
    }
    defaults {
      publications('mavenJava')
      publishArtifacts = true
      publishPom = true
    }
  }
  resolve {
    repository {
      repoKey = 'oss-snapshot-local'
    }
  }
}

release {
  versionPatterns = [
          /(\d+)(\.\d+[^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
  ]
  failOnSnapshotDependencies = false
  git {
    pushToRemote = false
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.0.2'
}
